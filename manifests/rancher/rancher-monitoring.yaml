apiVersion: v1
kind: Namespace
metadata:
  name: cattle-monitoring-system
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: rancher-monitoring 
  namespace: kube-system
spec:
  jobImage: %%REGISTRY%%/%%STAGE%%/docker.io/rancher/klipper-helm:v0.4.3
  chart: https://%%CLUSTER%%.%%DOMAIN%%:9345/static/charts/rancher-monitoring-101.0.0+up19.0.3.tgz
  targetNamespace: cattle-monitoring-system
  valuesContent: |-
    global:
      cattle:
        systemDefaultRegistry: "%%REGISTRY%%/%%STAGE%%/docker.io"
        clusterName: %%CLUSTER%%
      rbac:
        ## Create RBAC resources for ServiceAccounts and users 
        ##
        create: true
    
        userRoles:
          ## Create default user ClusterRoles to allow users to interact with Prometheus CRs, ConfigMaps, and Secrets
          create: true
          ## Aggregate default user ClusterRoles into default k8s ClusterRoles
          aggregateToDefaultRoles: true
    
        pspEnabled: true
    alertmanager:
      alertmanagerSpec:
        externalUrl: "https://alertmanager.%%CLUSTER%%.%%DOMAIN%%/"
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: %%CLUSTER%%-issuer
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
          nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
          nginx.ingress.kubernetes.io/auth-type: basic
        hosts:
        - alertmanager.%%CLUSTER%%.%%DOMAIN%%
        tls:
        - secretName: alertmanager-general-tls
          hosts:
          - alertmanager.%%CLUSTER%%.%%DOMAIN%%
    prometheus:
      prometheusSpec:
        baseURL: "https://prometheus.%%CLUSTER%%.%%DOMAIN%%/"
        resources:
          limits:
            memory: 3000Mi
          requests:
            memory: 1500Mi
        retentionSize: 1GiB
        storageSpec:
         volumeClaimTemplate:
           spec:
             storageClassName: vsphere
             accessModes: ["ReadWriteOnce"]
             resources:
               requests:
                 storage: 10Gi
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: %%CLUSTER%%-issuer
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
          nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
          nginx.ingress.kubernetes.io/auth-type: basic
        hosts:
        - prometheus.%%CLUSTER%%.%%DOMAIN%%
        tls:
        - secretName: prometheus-general-tls
          hosts:
          - prometheus.%%CLUSTER%%.%%DOMAIN%%
    grafana:
      adminPassword: suse1234
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: %%CLUSTER%%-issuer
          kubernetes.io/ingress.class: nginx
        hosts:
        - grafana.%%CLUSTER%%.%%DOMAIN%%
        tls:
        - secretName: grafana-general-tls
          hosts:
          - grafana.%%CLUSTER%%.%%DOMAIN%%
      persistence:
        accessModes:
        - ReadWriteOnce
        enabled: true
        size: 1G
        storageClassName: vsphere
        subPath: null
        type: statefulset
      sidecar:
        dashboards:
          searchNamespace: ALL
          provider:
            disableDelete: false
            allowUiUpdates: true
        datasources:
          searchNamespace: ALL
          provider:
            disableDelete: false
            allowUiUpdates: true
      initChownData:
        enabled: false
    prometheus-node-exporter:
      resources:
        limits:
          memory: 100Mi
        requests:
          memory: 60Mi
    rke2ControllerManager:
      enabled: true
    rke2Etcd:
      enabled: true
    rke2Proxy:
      enabled: true
    rke2Scheduler:
      enabled: true
